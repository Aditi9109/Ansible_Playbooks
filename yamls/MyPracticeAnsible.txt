-----------------------------------------------------------ANSIBLE------------------------------------------------------------------------


Created 3 servers -> master, worker1, worker2 [passwordless auth for worker1, Worker2]

In master----
$ apt install ansible -y
$ ansible --version

create a folder "ansible" in cd /etc
under the folder ansible, create a file "hosts"

$ cd /etc
$ mkdir ansible
$ touch hosts  (inside folder ansible)

$ vi hosts

[
[worker]
54.201.251.30                    <worker1 ip>
34.213.142.111                   <worker2 ip>

[master]
34.212.23.250  					 <master ip>
]                                                                                                                      ~                 



connect to worker--------------------------------------------------

$ ansible -m ping worker                     <it connects to both the workers>

root@master:/etc/ansible# ansible -m ping worker
54.201.251.30 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
34.213.142.111 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}


to see all the associated servers-----------------------------------
$ ansible-inventory --list -y

root@master:/etc/ansible# ansible-inventory --list -y
all:
  children:
    master:
      hosts:
        34.212.23.250: {}
    worker:
      hosts:
        34.213.142.111: {}
        54.201.251.30: {}
		
		
$ansible all -m ping
$ansible -m ping master
$ansible -m ping worker

check disk usage on all servers with:
$ ansible all -a "df -h"

****************************
1. To run any playbook use the following command
	ansible-playbook <playbook.yml>
2. To check the playbook for syntax errors
	ansible-playbook <playbook.yml> --syntax-check
3. To view hosts list
	ansible-inventory --list -y

****************************

****************************
Example1: create a .yml file with these details

$ cat > abcd.yml
---
- hosts: worker
  become: true
  tasks:
  - name: Create a file
    file: path=/etc/kris.txt state=touch

$ ansible-playbook abcd.yml

Delete created file----

$vi delFile.yml

---
- hosts : all
  become: true
  tasks:
    - name : Delete existing file
      file :
        path: /etc/kris.txt
        state : absent

ansible-playbook delFile.yml


****************************
Example2: Create a directory with the mode as 775 and owner/group as Ansible.

$ vi createDir.yml
---
- hosts : all
  become : true
  tasks :
    - name : Create Directory with mode 775
      file :
        path : /etc/kris
        state : directory
        mode : 775
        owner : root
        group : root

ansible-playbook createDir.yml


****************************
Example 3: Create a user. Letâ€™s look at the user module to create and delete users in the playbook.

$ vi createUser.yml
---
- hosts : all
  become : true
  tasks :
    - name : create user
      user :
        name : aditi
        password : aditi
        state : present
        groups : root
        shell : /bin/bash

 ansible-playbook createUser.yml
 
 *******************************
Example 4: Remove user. Removing a user is very easy and it will need the state to be set to absent. This is equivalent to the userdel command in Linux.

$ vi removeUser.yml
---
- hosts : all
  become : true
  tasks :
    - name : remove/delete user
      user :
        name : aditi
        state : absent
        remove : yes
        force : yes

$ ansible-playbook removeUser.yml

remove=yes will remove the home directory and force=yes will remove the files in the directory.

Example 6: Copy content to a file using the copy module. and move file to another location

---
- hosts : all
  become : true
  tasks :
    - name : copy content to file
      copy :
        content : "Hello Aditi \n"
        dest : /home/ubuntu/myfile.txt

    - name : move file to another location
      copy :
        src : /home/ubuntu/myfile.txt
        dest : /tmp/myfile.txt


*******************************
Example 7: Replace all instances of a string.

$ vi replaceString.yml

---
- hosts : all
  become : true
  tasks :
    - name : append content to existing file
      lineinfile :
        path : /home/ubuntu/myfile.txt
        line : "Hello this is Aditi again /n Hello everyone"

    - name : replace string Hello to Hieee
      replace :
        path : /home/ubuntu/myfile.txt
        regexp : 'Hello'
        replace : 'Hieee'


$ ansible-playbook replaceString.yml


*******************************
Example 8: Archive or ZIP files and Folders
<create a file and zip>

$vi zipFiles.yml

---
- hosts : all
  become : true
  tasks :
    - name : create a file in a path
      file :
        path : /home/ubuntu/myfile2.txt
        state : touch
        
    - name : zip/archive single file
      archive :
        path : /home/ubuntu/myfile.txt
        dest : /home/ubuntu/myfile.zip
        format : zip
    - name : zip/archive multiple files
      archive :
        path :
          - /home/ubuntu/myfile.txt
          - /home/ubuntu/myfile2.txt
        dest : /home/ubuntu/multifilezip.zip
        format : zip
    - name : All folder zip/archive
      archive :
        path : /home/ubuntu
        dest : /home/ubuntu/allZip.zip
        format : zip

$ ansible-playbook zipFiles.yml


PLAY [all] **************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************
ok: [54.218.241.99]
ok: [34.218.254.102]

TASK [create a file in a path] ******************************************************************************************************
changed: [54.218.241.99]
changed: [34.218.254.102]

TASK [zip/archive single file] ******************************************************************************************************
changed: [54.218.241.99]
changed: [34.218.254.102]

TASK [zip/archive multiple files] ***************************************************************************************************
changed: [54.218.241.99]
changed: [34.218.254.102]

TASK [All folder zip/archive] *******************************************************************************************************
changed: [54.218.241.99]
changed: [34.218.254.102]

PLAY RECAP **************************************************************************************************************************
34.218.254.102             : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
54.218.241.99              : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0



$ /home/ubuntu# ls -ltr
total 20
-rw-r--r-- 1 root root   13 Aug 26 08:57 myfile.txt
-rw-r--r-- 1 root root    0 Aug 26 09:14 myfile2.txt
-rw-r--r-- 1 root root  133 Aug 26 09:14 myfile.zip
-rw-r--r-- 1 root root  233 Aug 26 09:14 multifilezip.zip
-rw-r--r-- 1 root root 4556 Aug 26 09:14 allZip.zip


*******************************
Example 9: Working with date and timestamp

display date, display time, create dynamic file with timestamp

---
- hosts : all
  become : true
  tasks :
    - name : System date
      debug :
        var : ansible_date_time.date
    - name : System time
      debug :
        var : ansible_date_time.time
    - name : dynamic file with system timestamp
      file :
        path : /etc/testfile_{{ansible_date_time.date}}.log
        state : touch
        
        
Ecample 10 : Variables Example
read/input variable and print them

---
- hosts : all
  become : true
  vars :
    - F_name : Aditi
    - L_name : Singh
  tasks :
    - name : read variables
      debug :
        msg : "First name : {{F_name}}, Last name : {{L_name}}"


Example 12: Playbook to install vim editor and GIT on the target servers or machines.


- hosts: all
  become: true
  tasks:
  - name: Install Package GIT
    apt :
      name : git
      state : present
  - name: Install Package VIM
    apt :
      name : vim
      state : present


Example 14: install JDK

    ---
    - hosts : all
      become :
      tasks :
        - name: install JDK v17
          apt :
            name : openjdk-17-jdk
            state : present

ansible worker -m command -a 'java -version' 

print the shell command execution log---------------------------------------


---
- hosts : all
  become :
  tasks :
    - name: install JDK v17
      apt :
        name : openjdk-17-jdk
        state : present
    - name: java version
      shell: java --version
      register : ps
    - debug: var=ps.stdout_lines
    

save the shell command execution log in another file---------------------------------------

---
- hosts : all
  become :
  tasks :
    - name: install JDK v17
      apt :
        name : openjdk-17-jdk
        state : present
    - name: java version
      shell: java --version
      register : ps
    - name : save the log to the output file
      local_action : copy content={{ps.stdout_lines}} dest=/etc/OutputLog
      
      
      

root@master:/etc/ansible# cat file
["openjdk 17.0.12 2024-07-16", "OpenJDK Runtime Environment (build 17.0.12+7-Ubuntu-1ubuntu224.04)", "OpenJDK 64-Bit Server VM (build 17.0.12+7-Ubuntu-1ubuntu224.04, mixed mode, sharing)"]root@master:/etc/ansible#    
    


Example 15: Install Maven

---
- hosts : all
  become : true
  tasks :
    - name : Install maven plugin
      apt :
        name : maven
        state : present
    - name : Verify if maven is installed
      shell : mvn --version
      register : ps
    - debug: var=ps.stdout_lines
    

Example 16: Install Tomcat 8

https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.93/bin/apache-tomcat-9.0.93.tar.gz


Example 17 : Install and start jenkins service

---
- hosts: all
  become: true
  tasks:
    - name: install jdk
      apt:
        name: openjdk-17-jdk
        state: present
    - name: verify java version
      command: java --version
      register: ps
    - debug: var=ps.stdout_lines

- hosts: all
  become: true
  tasks:
    - name: Add Jenkins repository key
      ansible.builtin.get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc

    - name: Add Jenkins repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: Update apt cache again after adding Jenkins repository
      ansible.builtin.apt:
        update_cache: yes
        
     - name: install jenkins
      apt:
        name: jenkins
        state: present

    - name: Start Jenkins service
      ansible.builtin.systemd:
        name: jenkins
        state: started
        enabled: yes

    - name: Ensure Jenkins  on port 8080
      ansible.builtin.wait_for:
        port: 8080
        delay: 10
        state: started  

    - name: Get the password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register : pwd
    - debug: var=pwd.stdout_lines        






































		





















































